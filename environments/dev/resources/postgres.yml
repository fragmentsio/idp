apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres
  namespace: idp
data:
  postgres-user: postgres
  postgres-db: postgres
  idp-user: idp
  idp-db: idp
  idp-schema: idp
  init-db.sh: |
    #!/bin/bash
    set -e
    psql -v ON_ERROR_STOP=1 "user=$POSTGRES_USER password=$POSTGRES_PASSWORD dbname=$POSTGRES_DB" <<-EOSQL
      CREATE ROLE "$IDP_USER" WITH LOGIN PASSWORD '$IDP_PASSWORD';
      ALTER ROLE "$IDP_USER" CREATEDB REPLICATION;
      CREATE DATABASE "$IDP_DB" OWNER "$IDP_USER";
      GRANT ALL PRIVILEGES ON DATABASE "$IDP_DB" TO "$IDP_USER";
    EOSQL

---

apiVersion: v1
kind: Secret
metadata:
  name: postgres
  namespace: idp
type: Opaque
stringData:
  postgres-password: postgres
  idp-password: idp

---

apiVersion: v1
kind: Service
metadata:
  name: postgres-0
  namespace: idp
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 5432
    nodePort: 35432
  selector:
    tier: storage
    component: database
    statefulset.kubernetes.io/pod-name: postgres-0

---

apiVersion: v1
kind: Service
metadata:
  name: postgres-discovery
  namespace: idp
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - port: 80
    targetPort: 5432
  selector:
    tier: storage
    component: database

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: idp
spec:
  selector:
    matchLabels:
      tier: storage
      component: database
  serviceName: postgres-discovery
  replicas: 1
  template:
    metadata:
      labels:
        tier: storage
        component: database
    spec:
      containers:
      - name: postgres
        image: bitnami/postgresql:15.1.0
        ports:
        - name: postgres
          containerPort: 5432
        env:
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              name: postgres
              key: postgres-user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres
              key: postgres-password
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: postgres
              key: postgres-db
        - name: IDP_USER
          valueFrom:
            configMapKeyRef:
              name: postgres
              key: idp-user
        - name: IDP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres
              key: idp-password
        - name: IDP_DB
          valueFrom:
            configMapKeyRef:
              name: postgres
              key: idp-db
        - name: IDP_SCHEMA
          valueFrom:
            configMapKeyRef:
              name: postgres
              key: idp-schema
        volumeMounts:
        - name: postgres-data
          mountPath: /bitnami/postgresql
          readOnly: false
        - name: postgres-config
          mountPath: /docker-entrypoint-initdb.d
          readOnly: true
      volumes:
      - name: postgres-config
        configMap:
          name: postgres
          defaultMode: 0700
          items:
          - key: init-db.sh
            path: init-db.sh
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
  volumeClaimTemplates:
  - metadata:
      name: postgres-data
      namespace: idp
    spec:
      accessModes:
      - ReadWriteMany
      resources:
        requests:
          storage: 1Gi
